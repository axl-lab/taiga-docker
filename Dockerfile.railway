# Railway-optimized Dockerfile for Taiga
# This creates a simplified single-service deployment suitable for Railway

FROM ubuntu:20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    postgresql-client \
    nginx \
    supervisor \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/static /app/media /var/log/supervisor

# Copy supervisor configuration
COPY <<EOF /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
user=root

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/nginx.err.log
stdout_logfile=/var/log/supervisor/nginx.out.log

[program:taiga-back]
command=python3 -m gunicorn --bind 0.0.0.0:8001 taiga.wsgi
directory=/app/taiga-back
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/taiga-back.err.log
stdout_logfile=/var/log/supervisor/taiga-back.out.log
EOF

# Configure nginx
COPY <<EOF /etc/nginx/sites-available/default
server {
    listen 8000 default_server;
    client_max_body_size 100M;
    charset utf-8;

    location / {
        root /app/taiga-front/dist;
        try_files \$uri \$uri/ /index.html;
    }

    location /api/ {
        proxy_pass http://localhost:8001/api/;
        proxy_set_header Host \$http_host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /admin/ {
        proxy_pass http://localhost:8001/admin/;
        proxy_set_header Host \$http_host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /static/ {
        alias /app/static/;
    }

    location /media/ {
        alias /app/media/;
    }
}
EOF

# Download and setup Taiga components
RUN curl -L https://github.com/taigaio/taiga-back/archive/stable.tar.gz | tar -xz --strip-components=1 -C /app/
RUN pip3 install -r requirements.txt

# Create a startup script
COPY <<EOF /app/start.sh
#!/bin/bash
set -e

# Wait for database to be ready
until python3 manage.py migrate --check; do
    echo "Waiting for database..."
    sleep 2
done

# Run migrations
python3 manage.py migrate --noinput

# Collect static files
python3 manage.py collectstatic --noinput

# Start supervisor
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
EOF

RUN chmod +x /app/start.sh

# Expose port
EXPOSE 8000

# Start the application
CMD ["/app/start.sh"]
